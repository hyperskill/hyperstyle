<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
        "-//Checkstyle//DTD Checkstyle Configuration 1.3//EN"
        "https://checkstyle.org/dtds/configuration_1_3.dtd">

<module name="Checker">
    <property name="fileExtensions" value="java, properties, xml"/>

    <!-- Checks whether files end with a new line.                        -->
    <!-- See http://checkstyle.sf.net/config_misc.html#NewlineAtEndOfFile -->
    <!--    <module name="NewlineAtEndOfFile"/>-->

    <!-- Miscellaneous other checks.                   -->
    <!-- See http://checkstyle.sf.net/config_misc.html -->
<!--    <module name="RegexpSingleline">-->
<!--        <property name="format" value="\s+$"/>-->
<!--        <property name="minimum" value="0"/>-->
<!--        <property name="maximum" value="0"/>-->
<!--        <property name="message" value="Line has trailing spaces."/>-->
<!--    </module>-->

    <module name="TreeWalker">
<!--        <module name="SuppressionCommentFilter"/>-->

        <!-- Checks for blocks. You know, those {}'s         -->
        <!-- See http://checkstyle.sf.net/config_blocks.html -->
        <module name="AvoidNestedBlocks">
            <property name="allowInSwitchCase" value="true"/>
        </module>
        <module name="EmptyBlock"/>
        <module name="EmptyCatchBlock"/>
        <module name="LeftCurly"/>
        <module name="NeedBraces"/>
        <module name="RightCurly"/>

        <!-- Checks for common coding problems               -->
        <!-- See http://checkstyle.sf.net/config_coding.html -->
        <module name="CovariantEquals"/>
        <module name="DefaultComesLast"/>
        <module name="EmptyStatement"/>
        <module name="EqualsAvoidNull"/>
        <module name="EqualsHashCode"/>
        <module name="FallThrough"/>
        <module name="MissingSwitchDefault"/>
        <module name="ModifiedControlVariable"/>
        <module name="MultipleStringLiterals">
            <!-- Consistent with AvoidDuplicateLiterals from PMD -->
            <property name="allowedDuplicates" value="3"/>
            <property name="ignoreStringsRegexp" value='^".{0,2}"$'/>
        </module>
        <module name="MultipleVariableDeclarations"/>
        <module name="NoFinalizer"/>
        <module name="OneStatementPerLine"/>
        <module name="OverloadMethodsDeclarationOrder"/>
        <module name="ParameterAssignment"/>
        <module name="SimplifyBooleanExpression"/>
        <module name="SimplifyBooleanReturn"/>
        <module name="StringLiteralEquality"/>
        <module name="UnnecessaryParentheses"/>

<!--        <module name="UnnecessarySemicolonAfterTypeMemberDeclaration"/> Since Checkstyle 8.24 -->
<!--        <module name="VariableDeclarationUsageDistance"/>-->

        <!-- Checks for imports                              -->
        <!-- See http://checkstyle.sf.net/config_import.html -->
        <module name="IllegalImport"/> <!-- defaults to sun.* packages -->
        <module name="RedundantImport"/>
        <module name="UnusedImports">
            <property name="processJavadoc" value="false"/>
        </module>

        <!-- Miscellaneous other checks                    -->
        <!-- See http://checkstyle.sf.net/config_misc.html -->
        <module name="ArrayTypeStyle"/>
        <module name="TodoComment"/>
        <module name="UpperEll"/>
        <module name="Indentation"/>

        <!-- Modifier Checks                                    -->
        <!-- See http://checkstyle.sf.net/config_modifiers.html -->
        <module name="ModifierOrder"/>
<!--        <module name="RedundantModifier"/>-->

        <!-- Checks for Naming Conventions.                  -->
        <!-- See http://checkstyle.sf.net/config_naming.html -->
        <module name="AbbreviationAsWordInName">
            <property name="allowedAbbreviationLength" value="3"/>
        </module>
        <module name="ConstantName">
            <property name="format" value="^log(ger)?$|^[A-Z][A-Z0-9]*(_[A-Z0-9]+)*$"/>
            <message key="name.invalidPattern"
                     value="Name ''{0}'' must use UPPER_CASE_SNAKE_CASE (checked pattern ''{1}'')."/>
        </module>
        <module name="LambdaParameterName">
            <message key="name.invalidPattern"
                     value="Name ''{0}'' must use camelCase (checked pattern ''{1}'')."/>
        </module>
        <module name="LocalFinalVariableName">
            <message key="name.invalidPattern"
                     value="Name ''{0}'' must use camelCase (checked pattern ''{1}'')."/>
        </module>
        <module name="LocalVariableName">
            <message key="name.invalidPattern"
                     value="Name ''{0}'' must use camelCase (checked pattern ''{1}'')."/>
        </module>
        <module name="MemberName">
            <message key="name.invalidPattern"
                     value="Name ''{0}'' must use camelCase (checked pattern ''{1}'')."/>
        </module>
        <module name="MethodName">
            <message key="name.invalidPattern"
                     value="Name ''{0}'' must use camelCase (checked pattern ''{1}'')."/>
        </module>
        <module name="PackageName"/>
        <module name="ParameterName">
            <message key="name.invalidPattern"
                     value="Name ''{0}'' must use camelCase (checked pattern ''{1}'')."/>
        </module>
        <module name="StaticVariableName">
            <message key="name.invalidPattern"
                     value="Name ''{0}'' must use camelCase (checked pattern ''{1}'')."/>
        </module>
        <module name="TypeName">
            <message key="name.invalidPattern"
                     value="Name ''{0}'' must use PascalCase (checked pattern ''{1}'')."/>
        </module>

        <!-- Checks for Size Violations.                    -->
        <!-- See http://checkstyle.sf.net/config_sizes.html -->
        <module name="LineLength">
            <property name="max" value="120"/>
        </module>
<!--        <module name="MethodLength"/>-->
        <module name="ParameterNumber"/>

        <!-- Checks for whitespace                               -->
        <!-- See http://checkstyle.sf.net/config_whitespace.html -->
        <module name="EmptyForIteratorPad"/>
        <module name="EmptyLineSeparator">
            <property name="allowNoEmptyLineBetweenFields" value="true"/>
        </module>
        <module name="GenericWhitespace"/>
        <module name="MethodParamPad"/>
        <module name="NoWhitespaceAfter"/>
        <module name="NoWhitespaceBefore"/>
        <module name="OperatorWrap">
            <property name="tokens"
                value="ASSIGN,DIV_ASSIGN,PLUS_ASSIGN,MINUS_ASSIGN,STAR_ASSIGN,MOD_ASSIGN,
                SR_ASSIGN,BSR_ASSIGN,SL_ASSIGN,BXOR_ASSIGN,BOR_ASSIGN,BAND_ASSIGN"/>
            <property name="option" value="eol"/>
        </module>

        <module name="ParenPad"/>
        <module name="TypecastParenPad"/>
        <module name="WhitespaceAfter"/>
        <module name="WhitespaceAround"/>

        <!-- Metrics -->
        <module name="BooleanExpressionComplexity">
            <property name="max" value="0"/>
        </module>
        <module name="JavaNCSS">
            <property name="methodMaximum" value="0"/>
        </module>
        <module name="CyclomaticComplexity">
            <property name="max" value="0"/>
            <property name="switchBlockAsSingleDecisionPoint" value="true"/>
        </module>

    </module>
</module>
